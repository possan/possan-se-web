{
  "name": "wmd",
  "description": "A full-featured markdown processor based on Showdown",
  "version": "0.2.11",
  "dependencies": {
    "jsdom": "0.2.14",
    "htmlparser": "1.7.6",
    "underscore": "1.3.3",
    "js-yaml": "1.0.1",
    "highlight.js": "7.0.1"
  },
  "readme": "# WMD\n\nA Markdown parser for CommonJS (and node.js) based on the excellent\n[Showdown](http://attacklab.net/showdown/).\n\nEssentially WMD, is just a wrapper around Showdown, with a few hooks for\npreprocessing, and some default preprocessors and postprocessors.\n\n\n## Example\n\n    var wmd = require('wmd');\n\n    var html = wmd('Markdown *rocks*.');\n    console.log(html);\n\n\n# Documentation\n\n\n## wmd(markdown, options)\n\n* __markdown__ - A string containing Markdown.\n* __options__ - (optional) An object containing options (see options section)\n\nThe main function for converting Markdown to HTML, and normally the only\nfunction you'll need ot use. Applies all preprocessors defined in options\nbefore passing the result to Showdown for the final rendering.\n\nBy default, the underscores and metadata preprocessors are used.\n\nThis function returns a __doc__ object. The contents of the doc object may\ndiffer depending on the preprocessors used, but will always contain the\nfollowing:\n\n* __doc.html__ - The final HTML output of the conversion.\n* __doc.markdown__ - The markdown text passed to the processsor after all\n  preprocesor functions have been applied.\n* __doc.raw__ - The raw string before preprocessors were applied.\n\nThe string representation of a doc object (doc.toString()) is the same as\ndoc.html.\n\n\n## wmd.preprocessors\n\nAn object containing core preprocessor functions:\n\n* __underscores__ - code-friendly underscore processing taken from GitHub\n  Flavored Markdown. This means the bar in foo\\_bar\\_baz does not get emphasis.\n* __fencedCodeBlocks__ - GitHub style fenced code blocks\n* __yamlFrontMatter__ - Jekyll style YAML front matter for metadata\n* __metadata__ - takes metatdata information from the top of a markdown file\n  and adds it to doc.metadata.\n\n      property1: some value\n      property2: multi\n                 line\n                 value\n\n      # Markdown goes here\n\n  Would result in the following doc object:\n\n      {\n          metadata: {\n              property1: \"some value\",\n              property2: \"multi\\nline\\nvalue\"\n          },\n          html: \"<h1>Markdown goes here</h1>\",\n          markdown: \"# Markdown goes here\",\n          raw: \"property1: some value\\nproperty2: multi\\nline\\nvalue\\n\\n# Markdown goes here\"\n      }\n\nAdding preprocessors to wmd:\n\n    var wmd = require('wmd');\n    var html = wmd('Markdown *rocks*.', {\n        preprocessors: [\n            function (doc) {\n                doc.markdown += '.. even more!';\n                return doc;\n            }\n        ]\n    });\n\nBy default, the underscores and metadata preprocessors will be used.\n\n## wmd.postprocessors\n\nAn object containing core postprocessor functions:\n\n* __jsdom__ - uses jsdom to add doc.window containing the HTML generated from\n  markdown\n* __first_para__ - adds doc.first_para containing the text in the first p tag\n* __heading__ - adds doc.heading containing the text in the first h1 tag\n\nAdding postprocessors to wmd:\n\n    var wmd = require('wmd');\n    var html = wmd('Markdown *rocks*.', {\n        postprocessors: [\n            function (doc) {\n                doc.html += '<b>more html stuff</b>';\n                return doc;\n            }\n        ]\n    });\n\nBy default, no postprocessors will be used.\n\n\n## wmd.processor(markdown)\n\n* __markdown__ - A string containing Markdown.\n\nThe function which performs the conversion from markdown to html. By default\nthis is just Showdown's makeHTML function.\n\n\n## wmd.preprocess(doc, options)\n\n* __doc__ - A doc object\n* __options__ - (optional) An object containing options (see options section)\n\nApplies the preprocessor functions defined in options to the doc (usually\nupdating doc.markdown, sometimes adding new properties) before the doc is\npassed to the processor.\n\n\n## wmd.postprocess(doc, options)\n\n* __doc__ - A doc object\n* __options__ - (optional) An object containing options (see options section)\n\nApplies the postprocessor functions defined in options to the doc.\n\n\n## wmd.readOptions(options)\n\n* __options__ - (optional) An object containing options (see options section)\n\nYou would not normally need to call this directly. This function adds default\noptions to those passed to the main wmd function.\n\n\n## Options\n\n* __preprocessors__ - An array of functions which can transform the document\n  before its passed to the processor function. By default the underscores and\n  metadata preprocessors are used.\n* __postprocessors__ - An array of functions which can transform the document\n  after its been passed to the processor function. By default, no\n  postprocessors are used.\n",
  "_id": "wmd@0.2.11",
  "dist": {
    "shasum": "9ea3ce3d8b3decaef965519e819c8bfca14194f5",
    "tarball": "http://registry.npmjs.org/wmd/-/wmd-0.2.11.tgz"
  },
  "maintainers": [
    {
      "name": "caolan",
      "email": "caolan@caolanmcmahon.com"
    }
  ],
  "directories": {},
  "_shasum": "9ea3ce3d8b3decaef965519e819c8bfca14194f5",
  "_resolved": "https://registry.npmjs.org/wmd/-/wmd-0.2.11.tgz",
  "_from": "wmd@*"
}
